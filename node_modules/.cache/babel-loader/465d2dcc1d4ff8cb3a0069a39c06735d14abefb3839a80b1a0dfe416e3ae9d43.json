{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\dev\\\\ReferralAssistant\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createThread, addMessage } from './api/chatApi'; // Ensure these API functions are correctly implemented\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleGenerateReferral = async () => {\n    setLoading(true);\n    try {\n      // Step 1: Create a new thread\n      const threadId = await createThread();\n\n      // Step 2: Add the message to the thread\n      await addMessage(threadId, notes);\n\n      // Step 3: Run the thread and handle streamed responses\n      const eventSource = new EventSource(`http://localhost:8000/stream-run/${threadId}`);\n      eventSource.onmessage = function (event) {\n        console.log('New event from server:', event.data);\n        setResponse(prev => prev + '\\n' + event.data); // Append new data\n      };\n      eventSource.onerror = function (error) {\n        console.error('EventSource failed:', error);\n        eventSource.close();\n        setLoading(false);\n      };\n      eventSource.onopen = function () {\n        console.log('Connection to server opened.');\n      };\n\n      // Close the connection when the server says it's done\n      eventSource.addEventListener('done', () => {\n        eventSource.close();\n        setLoading(false);\n      });\n    } catch (error) {\n      console.error(\"Error generating referral:\", error);\n      alert(\"There was an error generating the referral. Please try again.\");\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: notes,\n      onChange: e => setNotes(e.target.value),\n      placeholder: \"Enter patient notes here...\",\n      rows: 10,\n      cols: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateReferral,\n      disabled: loading,\n      children: loading ? 'Generating...' : 'Generate Referral'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Referral Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"NzIjKj2KiQhwt+YMMChq78Ael0o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createThread","addMessage","jsxDEV","_jsxDEV","App","_s","notes","setNotes","response","setResponse","loading","setLoading","handleGenerateReferral","threadId","eventSource","EventSource","onmessage","event","console","log","data","prev","onerror","error","close","onopen","addEventListener","alert","className","children","value","onChange","e","target","placeholder","rows","cols","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/david/dev/ReferralAssistant/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { createThread, addMessage, runThread } from './api/chatApi'; // Ensure these API functions are correctly implemented\n\nfunction App() {\n    const [notes, setNotes] = useState('');\n    const [response, setResponse] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const handleGenerateReferral = async () => {\n        setLoading(true);\n        try {\n            // Step 1: Create a new thread\n            const threadId = await createThread();\n\n            // Step 2: Add the message to the thread\n            await addMessage(threadId, notes);\n\n            // Step 3: Run the thread and handle streamed responses\n            const eventSource = new EventSource(`http://localhost:8000/stream-run/${threadId}`);\n            eventSource.onmessage = function(event) {\n                console.log('New event from server:', event.data);\n                setResponse(prev => prev + '\\n' + event.data); // Append new data\n            };\n\n            eventSource.onerror = function(error) {\n                console.error('EventSource failed:', error);\n                eventSource.close();\n                setLoading(false);\n            };\n\n            eventSource.onopen = function() {\n                console.log('Connection to server opened.');\n            };\n\n            // Close the connection when the server says it's done\n            eventSource.addEventListener('done', () => {\n                eventSource.close();\n                setLoading(false);\n            });\n\n        } catch (error) {\n            console.error(\"Error generating referral:\", error);\n            alert(\"There was an error generating the referral. Please try again.\");\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <textarea\n                value={notes}\n                onChange={e => setNotes(e.target.value)}\n                placeholder=\"Enter patient notes here...\"\n                rows={10}\n                cols={50}\n            />\n            <button onClick={handleGenerateReferral} disabled={loading}>\n                {loading ? 'Generating...' : 'Generate Referral'}\n            </button>\n            <div>\n                <h2>Referral Response:</h2>\n                <p>{response}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}