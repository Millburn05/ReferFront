{"ast":null,"code":"// src/api/chatApi.ts\nconst baseUrl = 'http://localhost:8000'; // Base URL of your FastAPI server\n\nexport const createSession = async () => {\n  const response = await fetch(`${baseUrl}/create-session/`, {\n    method: 'POST'\n  });\n  if (!response.ok) {\n    throw new Error('Failed to create session');\n  }\n  const data = await response.json();\n  return data.session_id;\n};\nexport const sendMessage = async (sessionId, message) => {\n  const response = await fetch(`${baseUrl}/send-message/${sessionId}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      message\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to send message');\n  }\n  const data = await response.json();\n  return data.response;\n};","map":{"version":3,"names":["baseUrl","createSession","response","fetch","method","ok","Error","data","json","session_id","sendMessage","sessionId","message","headers","body","JSON","stringify"],"sources":["C:/Users/david/dev/ReferralAssistant/frontend/src/api/chatApi.ts"],"sourcesContent":["// src/api/chatApi.ts\r\nconst baseUrl = 'http://localhost:8000'; // Base URL of your FastAPI server\r\n\r\nexport const createSession = async (): Promise<string> => {\r\n    const response = await fetch(`${baseUrl}/create-session/`, { method: 'POST' });\r\n    if (!response.ok) {\r\n        throw new Error('Failed to create session');\r\n    }\r\n    const data = await response.json();\r\n    return data.session_id;\r\n};\r\n\r\nexport const sendMessage = async (sessionId: string, message: string): Promise<string> => {\r\n    const response = await fetch(`${baseUrl}/send-message/${sessionId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message })\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error('Failed to send message');\r\n    }\r\n    const data = await response.json();\r\n    return data.response;\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAA6B;EACtD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,kBAAiB,EAAE;IAAEI,MAAM,EAAE;EAAO,CAAC,CAAC;EAC9E,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;EACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,UAAU;AAC1B,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,SAAiB,EAAEC,OAAe,KAAsB;EACtF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,iBAAgBW,SAAU,EAAC,EAAE;IACjEP,MAAM,EAAE,MAAM;IACdS,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEJ;IAAQ,CAAC;EACpC,CAAC,CAAC;EACF,IAAI,CAACV,QAAQ,CAACG,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC7C;EACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACL,QAAQ;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}