{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\dev\\\\ReferralAssistant\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'http://localhost:8000';\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState('');\n  const [responses, setResponses] = useState([]);\n  useEffect(() => {\n    const eventSource = new EventSource(`${baseUrl}/stream-run/`);\n    eventSource.onmessage = function (event) {\n      setResponses(prevResponses => [...prevResponses, event.data]);\n    };\n    eventSource.onerror = function (event) {\n      console.error(\"EventSource failed.\");\n      eventSource.close();\n    };\n    return () => {\n      eventSource.close(); // Clean up the event source if the component unmounts\n    };\n  }, []);\n  const handleGenerateReferral = async () => {\n    const payload = {\n      content: notes\n    };\n    try {\n      const response = await fetch(`${baseUrl}/generate-referral/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Referral generation started:', data);\n    } catch (error) {\n      if (error instanceof Error) {\n        console.error(`Failed to generate referral: ${error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: notes,\n      onChange: e => setNotes(e.target.value),\n      placeholder: \"Enter patient notes here\",\n      rows: 10,\n      cols: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateReferral,\n      children: \"Generate Referral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Referral Responses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), responses.map((response, index) => /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: response\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"SIs3PreDHct/yA/kdtxZ6xk7cn4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","baseUrl","App","_s","notes","setNotes","responses","setResponses","eventSource","EventSource","onmessage","event","prevResponses","data","onerror","console","error","close","handleGenerateReferral","payload","content","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","log","message","className","children","value","onChange","e","target","placeholder","rows","cols","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","_c","$RefreshReg$"],"sources":["C:/Users/david/dev/ReferralAssistant/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst baseUrl = 'http://localhost:8000';\n\nfunction App() {\n    const [notes, setNotes] = useState('');\n    const [responses, setResponses] = useState<string[]>([]);\n\n    useEffect(() => {\n        const eventSource = new EventSource(`${baseUrl}/stream-run/`);\n        eventSource.onmessage = function(event) {\n            setResponses(prevResponses => [...prevResponses, event.data]);\n        };\n        eventSource.onerror = function(event) {\n            console.error(\"EventSource failed.\");\n            eventSource.close();\n        };\n        return () => {\n            eventSource.close();  // Clean up the event source if the component unmounts\n        };\n    }, []);\n\n    const handleGenerateReferral = async () => {\n        const payload = {\n            content: notes\n        };\n\n        try {\n            const response = await fetch(`${baseUrl}/generate-referral/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(payload)\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            console.log('Referral generation started:', data);\n        } catch (error) {\n            if (error instanceof Error) {\n                console.error(`Failed to generate referral: ${error.message}`);\n            }\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <textarea\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n                placeholder=\"Enter patient notes here\"\n                rows={10}\n                cols={100}\n            />\n            <button onClick={handleGenerateReferral}>Generate Referral</button>\n            <div>\n                <h2>Referral Responses:</h2>\n                {responses.map((response, index) => (\n                    <pre key={index}>{response}</pre>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACZ,MAAMU,WAAW,GAAG,IAAIC,WAAW,CAAE,GAAER,OAAQ,cAAa,CAAC;IAC7DO,WAAW,CAACE,SAAS,GAAG,UAASC,KAAK,EAAE;MACpCJ,YAAY,CAACK,aAAa,IAAI,CAAC,GAAGA,aAAa,EAAED,KAAK,CAACE,IAAI,CAAC,CAAC;IACjE,CAAC;IACDL,WAAW,CAACM,OAAO,GAAG,UAASH,KAAK,EAAE;MAClCI,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;MACpCR,WAAW,CAACS,KAAK,CAAC,CAAC;IACvB,CAAC;IACD,OAAO,MAAM;MACTT,WAAW,CAACS,KAAK,CAAC,CAAC,CAAC,CAAE;IAC1B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACvC,MAAMC,OAAO,GAAG;MACZC,OAAO,EAAEhB;IACb,CAAC;IAED,IAAI;MACA,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAErB,OAAQ,qBAAoB,EAAE;QAC1DsB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;MAChC,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBR,QAAQ,CAACS,MAAO,EAAC,CAAC;MAC7D;MAEA,MAAMjB,IAAI,GAAG,MAAMQ,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClChB,OAAO,CAACiB,GAAG,CAAC,8BAA8B,EAAEnB,IAAI,CAAC;IACrD,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,IAAIA,KAAK,YAAYa,KAAK,EAAE;QACxBd,OAAO,CAACC,KAAK,CAAE,gCAA+BA,KAAK,CAACiB,OAAQ,EAAC,CAAC;MAClE;IACJ;EACJ,CAAC;EAED,oBACIjC,OAAA;IAAKkC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBnC,OAAA;MACIoC,KAAK,EAAEhC,KAAM;MACbiC,QAAQ,EAAGC,CAAC,IAAKjC,QAAQ,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC,0BAA0B;MACtCC,IAAI,EAAE,EAAG;MACTC,IAAI,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACF9C,OAAA;MAAQ+C,OAAO,EAAE7B,sBAAuB;MAAAiB,QAAA,EAAC;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnE9C,OAAA;MAAAmC,QAAA,gBACInC,OAAA;QAAAmC,QAAA,EAAI;MAAmB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3BxC,SAAS,CAAC0C,GAAG,CAAC,CAAC3B,QAAQ,EAAE4B,KAAK,kBAC3BjD,OAAA;QAAAmC,QAAA,EAAkBd;MAAQ,GAAhB4B,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC3C,EAAA,CA/DQD,GAAG;AAAAgD,EAAA,GAAHhD,GAAG;AAiEZ,eAAeA,GAAG;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}