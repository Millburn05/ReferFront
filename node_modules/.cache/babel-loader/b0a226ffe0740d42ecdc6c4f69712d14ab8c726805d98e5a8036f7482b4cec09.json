{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\dev\\\\ReferralAssistant\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'http://localhost:8000';\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState('');\n  const [referralResponse, setReferralResponse] = useState(''); // State to hold the editable referral response\n\n  const handleGenerateReferral = async () => {\n    const payload = {\n      content: notes\n    };\n    try {\n      const response = await fetch(`${baseUrl}/generate-referral/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.message) {\n        setReferralResponse(data.message); // Set the editable referral response\n      } else {\n        setReferralResponse(`Run Status: ${data.status}`);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        console.error(`Failed to generate referral: ${error.message}`);\n        setReferralResponse(`Error: ${error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: notes,\n      onChange: e => setNotes(e.target.value),\n      placeholder: \"Enter patient notes here\",\n      rows: 10,\n      cols: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateReferral,\n      children: \"Generate Referral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Referral Letter:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: referralResponse,\n        onChange: e => setReferralResponse(e.target.value) // Allow editing of the referral response\n        ,\n        rows: 10,\n        cols: 100,\n        style: {\n          marginTop: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"d+UCkjxBLmXb/FyvEGYkeOert7Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","baseUrl","App","_s","notes","setNotes","referralResponse","setReferralResponse","handleGenerateReferral","payload","content","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","message","error","console","className","children","value","onChange","e","target","placeholder","rows","cols","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/david/dev/ReferralAssistant/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./App.css\"\n\nconst baseUrl = 'http://localhost:8000';\n\nfunction App() {\n    const [notes, setNotes] = useState('');\n    const [referralResponse, setReferralResponse] = useState(''); // State to hold the editable referral response\n\n    const handleGenerateReferral = async () => {\n        const payload = { content: notes };\n        try {\n            const response = await fetch(`${baseUrl}/generate-referral/`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(payload)\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            if (data.message) {\n                setReferralResponse(data.message); // Set the editable referral response\n            } else {\n                setReferralResponse(`Run Status: ${data.status}`);\n            }\n        } catch (error) {\n            if (error instanceof Error) {\n                console.error(`Failed to generate referral: ${error.message}`);\n                setReferralResponse(`Error: ${error.message}`);\n            }\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <textarea\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n                placeholder=\"Enter patient notes here\"\n                rows={10}\n                cols={100}\n            />\n            <button onClick={handleGenerateReferral}>Generate Referral</button>\n            <div>\n                <h2>Referral Letter:</h2>\n                <textarea\n                    value={referralResponse}\n                    onChange={(e) => setReferralResponse(e.target.value)} // Allow editing of the referral response\n                    rows={10}\n                    cols={100}\n                    style={{ marginTop: '10px' }}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}